// <auto-generated />
using FlexScaffoldSystems.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlexScaffoldSystems.Migrations
{
    [DbContext(typeof(DbContextConnection))]
    [Migration("20250824230018_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlexScaffoldSystems.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.ItemJobSiteCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("JobSiteCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("JobSiteCategoryId", "ItemId")
                        .IsUnique();

                    b.ToTable("ItemJobSiteCategories");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.JobSite", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("JobSites");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.JobSiteCategory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("JobSiteId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("JobSiteId", "CategoryId")
                        .IsUnique();

                    b.ToTable("JobSiteCategories");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.ItemJobSiteCategory", b =>
                {
                    b.HasOne("FlexScaffoldSystems.Entities.Item", "Item")
                        .WithMany("ItemJobSiteCategories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FlexScaffoldSystems.Entities.JobSiteCategory", "JobSiteCategory")
                        .WithMany("ItemJobSiteCategories")
                        .HasForeignKey("JobSiteCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("JobSiteCategory");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.JobSiteCategory", b =>
                {
                    b.HasOne("FlexScaffoldSystems.Entities.Category", "Category")
                        .WithMany("JobSiteCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlexScaffoldSystems.Entities.JobSite", "JobSite")
                        .WithMany("JobSiteCategories")
                        .HasForeignKey("JobSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("JobSite");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.Category", b =>
                {
                    b.Navigation("JobSiteCategories");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.Item", b =>
                {
                    b.Navigation("ItemJobSiteCategories");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.JobSite", b =>
                {
                    b.Navigation("JobSiteCategories");
                });

            modelBuilder.Entity("FlexScaffoldSystems.Entities.JobSiteCategory", b =>
                {
                    b.Navigation("ItemJobSiteCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
